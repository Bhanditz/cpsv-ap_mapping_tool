<?php


function CPSVAPmapping_menu() {

	$items['CPSVAPmappings'] = array(
		'page callback' => 'drupal_get_form',
		'page arguments' => array('CPSVAPmapping_basic'),
		'access callback' => TRUE,
	);
	
	return $items;
}

function CPSVAPmapping_basic($form, &$form_state) {
	
	$datamodel_list= CPSVAPmapping_basic_populate_list();
	$dropdown_array= CPSVAPmapping_basic_relations_list();

	
	$form = array();
	
	
	$form['datamodellist2'] = array (
					'#title' => t('Choose a target datamodel or insert a new one'),
					'#type' => 'select',
					'#options' => $datamodel_list,
					'#default_value' => 'default',
					
				);
	
	
	
	$form['datamodel_fieldset2'] = array(
		 '#type' => 'fieldset',
	 	 '#title' => t('datamodel 2'),
	 	 '#prefix' => '<div id="datamodel-fieldset2">',
	 	 '#suffix' => '</div>',
	 	 );	  	 	 
		 
			
		  
			
			 $form['datamodel_fieldset2']['datamodel2'] = array (
		  	  		'#title' => t('Name of the second datamodel'),                                     
					'#type' => 'textfield',
					'#size' => '50',
					'#states' => array(
						'visible' => array(
						':input[name="datamodellist2"]' => array('value' => '0'),
							),
						),
					);
			 
			   $form['datamodel_fieldset2']['URI2'] = array (
							'#title' => t('URI'),
							'#type' => 'textfield',
							'#size' => '50',
							'#states' => array(
								'visible' => array(
								':input[name="datamodellist2"]' => array('value' => '0'),
									),
								),
							);
	   
	   $form['#attached']['css'] = array(
		  	  drupal_get_path('module', 'CPSVAPmapping') . '/CPSVAPmapping.css',
		);
	   
	   $form['#tree'] = TRUE;
	   $form['relations_fieldset'] = array(
	 	 '#type' => 'fieldset',
	 	 '#title' => t('CPSVAPmapping relations'),
	 	 '#prefix' => '<div id="relations-fieldset-wrapper">',
	 	 '#suffix' => '</div>',
	 	 );	
	 
	   	$form['relations_fieldset']['labels']['dummylabelprobnotgoodpractice'] = array (
		  	  		'#markup' => '<h1> </h1>',
					);
		
		  $form['relations_fieldset']['labels']['source_class_label'] = array (
		  	  		'#markup' => '<h1>Source Class</h1>',
					);
		  
		  $form['relations_fieldset']['labels']['source_property_label'] = array (
					'#markup' => '<h1>Source Property</h1>',
					);
		  
		  $form['relations_fieldset']['labels']['relation_label'] = array (
					'#markup' => '<h1>Relation</h1>',
					);
		  
		  $form['relations_fieldset']['labels']['target_class_label'] = array (
					'#markup' => '<h1>Target Class</h1>',
					);
		  
		  $form['relations_fieldset']['labels']['target_property_label'] = array (
					'#markup' => '<h1>Target Property</h1>',
					);
		  
		  $form['relations_fieldset']['labels']['target_property_label'] = array (
					'#markup' => '<h1>Target Property</h1>',
					);
		  
		  $form['relations_fieldset']['labels']['syntax_CPSVAPmapping_label'] = array (
					'#markup' => '<h1>Syntax Mapping</h1>',
					);
	
		  if (empty($form_state['num_relations'])) {
		  	  $form_state['num_relations'] =1;
		  }
		  
		  for ($i = 0; $i < $form_state['num_relations']; $i++) {

		  	  $chosen_class = CPSVAPmapping_get_class_chosen();
		  	  
		  	  $selected = isset($form_state['values']['relations_fieldset'][$i]['source_class']) ? $form_state['values']['relations_fieldset'][$i]['source_class'] : key($chosen_class);
		  	  $properties = CPSVAPmapping_get_properties_dropdown_options($selected);
		  	  
		  	   $form['relations_fieldset'][$i]['relationship_label'] = array (
		  	  		'#markup' => '<h2>Relationships:</h2>',
					);
			   
				$form['relations_fieldset'][$i]['source_class'] = array (
					'#type' => 'select',
					'#options' => $chosen_class,
					'#default_value' => $selected,
					'#ajax' => array(
						'callback' => 'CPSVAPmapping_dependent_dropdown_callback',
						'wrapper' => 'relations-fieldset-wrapper',
						),
					);
				
				$form['relations_fieldset'][$i]['source_property'] = array (
					'#type' => 'select',
					'#prefix' => '<div id="dropdown-properties-replace">',
					'#suffix' => '</div>',
					'#options' => $properties,
					'#default_value' => isset($form_state['values']['relations_fieldset'][$i]['source_property']) ? $form_state['values']['relations_fieldset'][$i]['source_property'] : '',
					);
	
  
				$form['relations_fieldset'][$i]['relation'] = array (
					'#type' => 'select',
					'#options' => $dropdown_array,
					
					);
				
					$form['relations_fieldset'][$i]['target_property'] = array (
					'#type' => 'textfield',
					'#size' => '10',
					);
					
				$form['relations_fieldset'][$i]['target_class'] = array (
					'#type' => 'textfield',
					'#size' => '10',
					
					);
				
			
				
				$form['relations_fieldset'][$i]['syntax_mapping'] = array (
					'#type' => 'checkbox',				
					);	
				
				$form['relations_fieldset'][$i]['uri_label'] = array (
		  	  		'#markup' => '<h2>URIs: </h2>',
					);
				
				
					$form['relations_fieldset'][$i]['source_class_URI'] = array (
					'#title_display'=> 'before',
					'#type' => 'textfield',
					'#size' => '10',
					'#attributes' => array('hidden' => 'hidden'),
				     
					);
				
				$form['relations_fieldset'][$i]['source_property_URI'] = array (
					'#type' => 'textfield',
					'#size' => '10',
					'#attributes' => array('hidden' => 'hidden'),
					
					);
								
				$form['relations_fieldset'][$i]['relation_URI'] = array (
					'#type' => 'textfield',
					'#size' => '10',
					 '#attributes' => array('hidden' => 'hidden'),
					);
				
				$form['relations_fieldset'][$i]['target_property_URI'] = array (
					'#type' => 'textfield',
					'#size' => '10',
					'#states' => array(
								'readonly' => array(
								':input[name="relations_fieldset['.$i.'][known_URI]"]' => array('checked' => FALSE),
									),
								),
					);
				$form['relations_fieldset'][$i]['target_class_URI'] = array (
					'#type' => 'textfield',
					'#size' => '10',
					'#states' => array(
								'readonly' => array(
								':input[name="relations_fieldset['.$i.'][known_URI]"]' => array('checked' => FALSE),
									),
								),
					);
				
				
				
					
				$form['relations_fieldset'][$i]['labels']['known_uri'] = array (
		  	  		'#markup' => '<h3> only fill in the URIs if they are known </h3>',
				);
				
					$form['relations_fieldset'][$i]['line'] = array (
		  	  		'#markup' => '<div class="style1"></div>',
				);
			}
			
			$form['generate_uri'] = array(
				'#type' => 'submit',
				'#submit' => array('CPSVAPmapping_generate_uri'),
				'#value' => t('generate URIs'),
				
				'#ajax' => array(
					'event' => 'change', 
					'callback' => 'CPSVAPmapping_add_more_callback',
					'wrapper' => 'relations-fieldset-wrapper',
					),
				);
			
			$form['add_relation'] = array(
				'#type' => 'submit',
				'#value' => t('add relation'),
				'#submit' => array('CPSVAPmapping_add_one'),
				'#limit_validation_errors' => array(),
				'#ajax' => array(
					'callback' => 'CPSVAPmapping_add_more_callback',
					'wrapper' => 'relations-fieldset-wrapper',
					),
				);
				  	  	
  	  	  	$form['add_5_relations'] = array(
  	  	  		'#type' => 'submit',
  	  	  		'#value' => ('+5 relations'),
  	  	  		'#submit' => array('CPSVAPmapping_add_five'),
  	  	  		'#limit_validation_errors' => array(),
  	  	  		'#ajax' => array(
					'callback' => 'CPSVAPmapping_add_more_callback',
					'wrapper' => 'relations-fieldset-wrapper',
					),
				);
			
			$form['remove_relation'] = array(
				'#type' => 'submit',
				'#value' => ('remove relation'),
				'#submit' => array('CPSVAPmapping_remove_one'),
				'#limit_validation_errors' => array(),
				'#ajax' => array(
					'callback' => 'CPSVAPmapping_add_more_callback',
					'wrapper' => 'relations-fieldset-wrapper',
					),
				);
			
			$form['remove_five_relations'] = array(
				'#type' => 'submit',
				'#value' => ('-5 relations'),
				'#submit' => array('CPSVAPmapping_remove_five'),
				'#limit_validation_errors' => array(),
				'#ajax' => array(
					'callback' => 'CPSVAPmapping_add_more_callback',
					'wrapper' => 'relations-fieldset-wrapper',
					),
				);
  	  	  	
		   $form['submit'] = array(
			 '#type' => 'submit',
			 '#value' => t('Submit'),		
			 '#attributes' => array('onclick' => 'if(!confirm("are you sure you want to submit the mapping?")){return false;}')
			
			
			 );
		   
	return $form;
	
}

function CPSVAPmapping_add_one($form, &$form_state) {
	$form_state['num_relations']++;
	$form_state['rebuild'] = TRUE;
	
}

function CPSVAPmapping_add_five($form,&$form_state) {
	$form_state['num_relations'] += 5;
	$form_state['rebuild'] = TRUE;
}

	
function CPSVAPmapping_remove_one($form, &$form_state) {
	if($form_state['num_relations'] > 1){
		$form_state['num_relations']--;
		$form_state['rebuild'] = TRUE;
	}
		 
}

function CPSVAPmapping_remove_five($form, &$form_state) {
	if($form_state['num_relations'] > 5){
		$form_state['num_relations']-=5;
		$form_state['rebuild'] = TRUE;
	}
}



function CPSVAPmapping_generate_uri($form, &$form_state ){
	
	
	
	$select2 = $form_state['complete form']['datamodellist2']['#options'][$form_state['values']['datamodellist2']];
	
		
	if($select2== "add new") {
		$datamodel2=$form_state['values']['wrapper_datamodels']['datamodel_fieldset2']['datamodel2'];
		$datamodelURI2= $form_state['values']['wrapper_datamodels']['datamodel_fieldset2']['URI2'];
	}
	else {
		$datamodel2=$select2;
		$result2 = db_query('SELECT uri FROM datamodels WHERE name= :datamodel2', array(':datamodel2' => $datamodel2));
		$datamodelURI2= $result2->fetchField(0);
		
	}
	$root = (!empty($_SERVER['HTTPS']) ? 'https' : 'http') . '://' . $_SERVER['HTTP_HOST'] . '/';

	
	for($i = 0; $i < $form_state['num_relations']; $i++){
				
	
	
		$relation_choice= $form_state['complete form']['relations_fieldset'][$i]['relation']['#options'][$form_state['values']['relations_fieldset'][$i]['relation']];
	
			
		if($relation_choice=='Exact match')
			$form_state['input']['relations_fieldset'][$i]['relation_URI']='skos:exactMatch';
		if($relation_choice=='Close match')
			$form_state['input']['relations_fieldset'][$i]['relation_URI']='skos:closeMatch';
		if($relation_choice=='Narrow match')
			$form_state['input']['relations_fieldset'][$i]['relation_URI']='skos:narrowMatch';
		if($relation_choice=='Broad match')
			$form_state['input']['relations_fieldset'][$i]['relation_URI']='skos:broadMatch';
		if($relation_choice=='Related match')
			$form_state['input']['relations_fieldset'][$i]['relation_URI']='skos:relatedMatch';
		
		$testempty1 = trim($form_state['values']['relations_fieldset'][$i]['target_class']);
		$testempty2 = trim($form_state['values']['relations_fieldset'][$i]['target_class_URI']);
	
		if(!empty($testempty1)&& empty($testempty2)){
		$targetclassUri = $root.'mapping/'.$datamodelURI2.'/class/'.str_replace(' ','',$form_state['values']['relations_fieldset'][$i]['target_class']);
		unset($form_state['input']['relations_fieldset'][$i]['target_class_URI']);
	
		$form_state['input']['relations_fieldset'][$i]['target_class_URI'] = $targetclassUri;	
		//$form['relations_fieldset'][$i]['target_class_URI']['#value']= $targetclassUri;
		}
		
		$testempty1 = trim($form_state['values']['relations_fieldset'][$i]['target_property']);
		$testempty2 = trim($form_state['values']['relations_fieldset'][$i]['target_property_URI']);
		
		if(!empty($testempty1)&& empty($testempty2)) {
		$targetpropertyUri = $root.'mapping/'.$datamodelURI2.'/property/'.str_replace(' ','',$form_state['values']['relations_fieldset'][$i]['target_property']);
		unset($form_state['input']['relations_fieldset'][$i]['target_property_URI']);

		$form_state['input']['relations_fieldset'][$i]['target_property_URI'] = $targetpropertyUri;	
		//$form['relations_fieldset'][$i]['target_property_URI']['#value']= $targetpropertyUri;
		}			
	
	}
	$form_state['rebuild']= TRUE;

	return form_builder('form-wrapper', $form['relations_fieldset'], $form_state);
}


function CPSVAPmapping_add_more_callback($form, $form_state) {

  return $form['relations_fieldset'];
}	

function CPSVAPmapping_basic_validate($form, &$form_state){
	$foo = FALSE;
 
 
	$select2 = $form_state['complete form']['datamodellist2']['#options'][$form_state['values']['datamodellist2']];
   
  
	$testempty1 = trim($form_state['values']['datamodel_fieldset2']['datamodel2']);
	$testempty2 = trim($form_state['values']['datamodel_fieldset2']['URI2']);
 	
	
	if($select2== "add new"){
		if(empty($testempty1)){
			form_set_error('postal', t('target datamodel name is required.'));
			$foo= TRUE;
		 }
		  
		if(empty($testempty2)){
			form_set_error('postal', t('target datamodel uri is required.'));
			$foo= TRUE;
		  }
	}

	for($i = 0; $i < $form_state['num_relations']; $i++){
		
		  $testempty4=  trim($form_state['values']['relations_fieldset'][$i]['relation']);
		  $testempty5 = trim($form_state['values']['relations_fieldset'][$i]['target_class']);
		  $testempty6 = $form_state['complete form']['relations_fieldset'][$i]['source_property']['#options'][$form_state['values']['relations_fieldset'][$i]['source_property']];	
		  $testempty7 = trim($form_state['values']['relations_fieldset'][$i]['target_property']);
  		
		if(empty($testempty4)) {
			 form_set_error('postal', t('The relation is required.'));
			 $foo= TRUE;
		}
	 
		if(empty($testempty5)) {
			 form_set_error('postal', t('The target class is required.'));
			 $foo= TRUE;
		}
		
		if($testempty6 != "" && empty($testempty7)){
			 form_set_error('postal', t('The target property is required.'));
			 $foo= TRUE;
		}
		
		if($testempty6 == "" && !empty($testempty7)){
			 form_set_error('postal', t('The source property is required.'));
			 $foo= TRUE;
		}
    
  	 }
  if($foo==TRUE){
  	 return;
  }
  
}

function CPSVAPmapping_basic_submit($form, &$form_state) {
	
	$root = (!empty($_SERVER['HTTPS']) ? 'https' : 'http') . '://' . $_SERVER['HTTP_HOST'] . '/';
	$datamodel1='CPSV-AP';
	$datamodelURI1= 'https://joinup.ec.europa.eu/asset/cpsv-ap/description';
		
	$select2 = $form_state['complete form']['datamodellist2']['#options'][$form_state['values']['datamodellist2']];
		
	if($select2== "add new") {
		$datamodel2=$form_state['values']['datamodel_fieldset2']['datamodel2'];
		$datamodelURI2= $form_state['values']['datamodel_fieldset2']['URI2'];
	}
	else {
		$datamodel2=$select2;
		$result2 = db_query('SELECT uri FROM datamodels WHERE name= :datamodel2', array(':datamodel2' => $datamodel2));
		$datamodelURI2= $result2->fetchField(0);
	}
	
 for($i = 0; $i < $form_state['num_relations']; $i++){
 	 
 
  if(!empty($form['relations_fieldset'][$i]['source_class'])) {
 	
  	 $relation_choice= $form_state['complete form']['relations_fieldset'][$i]['relation']['#options'][$form_state['values']['relations_fieldset'][$i]['relation']]; 	 
  	$sourceclass= $form_state['complete form']['relations_fieldset'][$i]['source_class']['#options'][$form_state['values']['relations_fieldset'][$i]['source_class']];
 	$sourceclassuri = CPSVAPmapping_getURIclass($sourceclass);
 	if($sourceclassuri =='')
		$sourceclassuri = $root.'mapping/'.$datamodelURI1.'/property/'.str_replace(' ','',$form_state['values']['relations_fieldset'][$i]['source_class']);
	
 	$sourceproperty= $form_state['complete form']['relations_fieldset'][$i]['source_property']['#options'][$form_state['values']['relations_fieldset'][$i]['source_property']];	
 	
 	if($sourceproperty !='') {
		$sourcepropertyuri = CPSVAPmapping_getURIproperty($sourceclass,$sourceproperty);
		if($sourcepropertyuri =='')
			$sourcepropertyuri = $root.'mapping/'.$datamodelURI1.'/property/'.str_replace(' ','',$form_state['values']['relations_fieldset'][$i]['source_property']);
	}
	
	$relation= $form_state['complete form']['relations_fieldset'][$i]['relation']['#options'][$form_state['values']['relations_fieldset'][$i]['relation']];
	if($relation_choice=='Exact match')
		$relationuri='skos:exactMatch';
	if($relation_choice=='Close match')
		$relationuri='skos:closeMatch';
	if($relation_choice=='Narrow match')
		$relationuri='skos:narrowMatch';
	if($relation_choice=='Broad match')
		$relationuri='skos:broadMatch';
	if($relation_choice=='Related match')
		$relationuri='skos:relatedMatch';
	
	$targetclass= $form_state['values']['relations_fieldset'][$i]['target_class'];
	$targetclassuri= $form_state['values']['relations_fieldset'][$i]['target_class_URI'];
	$targetproperty= $form_state['values']['relations_fieldset'][$i]['target_property'];
	
	if($targetproperty !='') {
		$targetpropertyuri= $form_state['values']['relations_fieldset'][$i]['target_property_URI'];
	}
	
	$synmap= $form_state['values']['relations_fieldset'][$i]['syntax_mapping'];
	
	db_insert('relations')
    ->fields(array(
      'did1' => $datamodel1,
      'did2' => $datamodel2,
      'coreclass' =>$sourceclass, 
      'coreclassuri' => $sourceclassuri,
      'coreproperty' =>$sourceproperty,
      'corepropertyuri' =>$sourcepropertyuri,
      'relation' =>$relation,
      'relationuri' =>$relationuri,
      'mappedclass' =>$targetclass,
      'mappedclassuri' =>$targetclassuri,
      'mappedproperty' =>  $targetproperty,
      'mappedpropertyuri' =>  $targetpropertyuri,
      'synmap' =>$synmap,
      ))->execute();
    }
    else {
    	drupal_set_message('CPSVAPmapping relations are not filled in correctly');
    }
 
    
    if($select2 =='add new') {
    	db_insert('datamodels')
    	->fields(array(
    		'name' =>$form_state['values']['datamodel_fieldset2']['datamodel2'],
    		'uri' =>$form_state['values']['datamodel_fieldset2']['URI2'],
    	))->execute();
    }
       
 		
 
 	if(easyrdf()){
 		//the $endpoint should point to the correct address
		$endpoint= 'http://52.50.205.146/sparql-graph-crud';
 		$gs = new EasyRdf_GraphStore($endpoint);
 		$graph1 = new EasyRdf_Graph();
 		
 		//datamodel definition
 		$graph1->addResource('http://mapping.semic.eu/def#DataModel', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type', 'http://www.w3.org/2000/01/rdf-schema#Class');
 		$graph1->addResource('http://mapping.semic.eu/def#DataModel', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type', 'http://www.w3.org/2004/02/skos/core#Concept');
 		$graph1->add('http://mapping.semic.eu/def#DataModel', 'http://www.w3.org/2000/01/rdf-schema#label', "Core Data Model");
 		$graph1->add('http://mapping.semic.eu/def#DataModel', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type', "reusable data models that are defined, managed, promoted and maintained centrally to facilitate interoperability across different systems, applications and domains");
 		
 		//datamodel, classes & properties
 		$graph1->addResource($datamodelURI1, 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type', 'http://mapping.semic.eu/def#DataModel');
 		$graph1->addResource($datamodelURI2, 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type', 'http://mapping.semic.eu/def#DataModel');
 		if($sourcepropertyuri!=''){
 			$graph1->addResource($sourcepropertyuri, 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#Property');
 		}
 		if($targetpropertyuri!=''){
 			$graph1->addResource($targetpropertyuri, 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#Property');
 		}
 		$graph1->addResource($sourceclassuri, 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type', 'http://www.w3.org/2000/01/rdf-schema#Class');
 		$graph1->addResource($targetclassuri, 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type', 'http://www.w3.org/2000/01/rdf-schema#Class');	
 		//ispartof
 		$graph1->addResource($sourceclassuri, 'http://purl.org/dc/terms/isPartOf', $datamodelURI1);
 		$graph1->addResource($targetclassuri, 'http://purl.org/dc/terms/isPartOf', $datamodelURI2);
 		
 		if($sourcepropertyuri =='' && $targetpropertyuri ==''){   
 			$graph1->addResource($sourceclassuri,$relationuri, $targetclassuri); 
 		}
 		else{
 			$graph1->addResource($sourcepropertyuri, 'http://purl.org/dc/terms/isPartOf', $sourceclassuri);
 			$graph1->addResource($targetpropertyuri, 'http://purl.org/dc/terms/isPartOf', $targetclassuri);
 			$graph1->addResource($sourcepropertyuri,$relationuri, $targetpropertyuri); 
 		}
 		
 		drupal_set_message($graph1->dump());
 		$gs->insert($graph1, 'http://cpsv-ap_mapping.eu');
 	
 		}
	}
	
 		drupal_set_message("CPSV-AP Mapping has been submitted");
}

function CPSVAPmapping_basic_populate_list(){
	$databaselist= db_query('SELECT mid,name FROM datamodels') ;

	$options= array('0' => 'add new');
   	 	foreach ($databaselist as $item) {
		  	$key = $item->mid;
		  	$value = $item->name;
		  	$options[$key] = $value;
		  }
    return $options;
}
		  
function CPSVAPmapping_basic_relations_list() {
	$voc_name = 'Skos_mappingRelation';
	$myvoc = taxonomy_vocabulary_machine_name_load($voc_name);
		  
	$dropdown_source = taxonomy_get_tree($myvoc->vid);
	
	$dropdown_list = array('0' => '---none---');
		  
		  foreach ($dropdown_source as $item) {
		  	  $key = $item->tid;
		  	  $value = $item->name;
		  	  $dropdown_list[$key] = $value;
		  }
		  
	return $dropdown_list;
}

function CPSVAPmapping_basic_classes_list(){
	$classes_name = 'Classes';
	$myclasses = taxonomy_vocabulary_machine_name_load($classes_name);
		  
	$classes_source = taxonomy_get_tree($myclasses->vid);
	
	$classes_list = array('0' => '---none---');
		  
		  foreach ($classes_source as $item) {
		  	  $key = $item->tid;
		  	  $value = $item->name;
		  	  $classes_list[$key] = $value;
		  }              
		  
	return $classes_list;
}

function CPSVAPmapping_basic_properties_list($vocabulary){

	
	$classes = taxonomy_get_tree($vocabulary);

  foreach ($classes as $data) {
    $output[$data->tid] = $data->name;
  }
  
  return $output;
}


					
				
function CPSVAPmapping_dependent_dropdown_callback($form, $form_state) {
  
	
  return $form['relations_fieldset'] ;
  
}


function CPSVAPmapping_get_class_chosen() {
  return drupal_map_assoc(
    array(
		t('Public Service'),
		t('Event'),
		t('Business Event'),
		t('Life Event'),
		t('Participation'),
		t('CriterionRequirement'),
		t('Evidence'),
		t('Output'),
		t('Cost'),
		t('Channel'),
		t('Period Of Time'),
		t('Rule'),
		t('Formal Framework'),
		t('Agent'),
		t('Contact Point'),
		t('Public Organization'),
    )
  );
 }

function CPSVAPmapping_get_properties_dropdown_options($key = '') {
  $options = array(
    t('Public Service') => drupal_map_assoc(
      array(
      	t(''),
        t('Name'),
        t('Description'),
        t('Identifier'),
        t('Keyword'),
        t('Language'),
        t('Processing Time'),
        t('Sector'),
        t('Type'),
        t('Status'),
        t('Spatial'),
        t('Is Grouped By'),
        t('Requires'),
        t('Related'),
        t('Has Criterion'),
        t('Has Competent Authority'),
        t('Has Contact Point'),
        t('Has Channel'),
        t('Service Provider'),
        t('Service User'),
        t('Has Participation'),
        t('Has Input'),
        t('Has Formal Framework'),
        t('Produces'),
        t('Follows'),
        t('Temporal'),
        t('Has Cost'), 
      )
    ),
    t('Event') => drupal_map_assoc(
      array(
      	t(''),
        t('Name'),
        t('Identifier'),
        t('Description'),
        t('Type'),
        t('Related Service'),
      )
    ),
    t('Participation') => drupal_map_assoc(
      array(
      	t(''),
        t('Identifier'),
        t('Description'),
        t('Role'),
      )
    ),
    t('CriterionRequirement') => drupal_map_assoc(
      array(
      	t(''),
        t('Name'),
        t('Identifier'),
        t('Type'),
      )
    ),
    t('Evidence') => drupal_map_assoc(
      array(
      	t(''),
        t('Identifier'),
        t('Name'),
        t('Description'),
        t('Type'),
        t('Related Documentation'),
        t('Language'),
      )
    ),
    t('Business Event') => drupal_map_assoc(
      array(
      	t(''),
        t('Identifier'),
        t('Name'),
        t('Description'),
        t('Type'),
        t('Related Documentation'),
        t('Language'),
      )
    ),
    t('Life Event') => drupal_map_assoc(
      array(
      	t(''),
        t('Identifier'),
        t('Name'),
        t('Description'),
        t('Type'),
        t('Related Documentation'),
        t('Language'),
      )
    ),
    
  /*  t('Input') => drupal_map_assoc(
      array(
        t('Name'),
        t('Identifier'),
        t('Description'),
        t('Related Documentation'),
        t('Type'),
      )
    ),*/
    t('Agent') => drupal_map_assoc(
      array(
      	t(''),
        t('Name'),
        t('Identifier'),
        t('Type'),
        t('Plays Role'),
        t('Uses'),
        t('Provides'),
        t('Has Address'),
      )
    ),
    t('Contact Point') => drupal_map_assoc(
      array(
      	t(''),
        t('identifier'),
        t('Has Adress'),
        t('Has Email'),
        t('Has Telephone'),
        t('Has URL'),
        t('Has Identifier'),
      )
    ),
 /*  t('Person') => drupal_map_assoc(
      array()
      ),*/
    t('Period Of Time') => drupal_map_assoc(
      array(
      	t(''),
        t('Identifier'),
        t('Start datetime'),
        t('End datetime'),
        t('Opening Hours'),
        )
      ),
    t('Rule') => drupal_map_assoc(
      array(
      	t(''),
        t('Identifier'),
        t('Description'),
        t('Language'),
        t('Name'),
        t('Implements'),
        )
      ),
    t('Formal Framework') => drupal_map_assoc(
      array(
      	t(''),
        t('Name'),
        t('Identifier'),
        t('Description'),
        t('Status'),
        t('Language'),
        t('Subject'),
        t('Territorial Application'),
        t('Type'),
        t('Related'),
        )
      ), 
    t('Public Organization') => drupal_map_assoc(
      array(
      	t(''),
      	t('Identifier'),
      	t('Preferred Label'),
      	t('Spatial'),
        )
      ), 
    t('Channel') => drupal_map_assoc(
      array(
      	t(''),
        t('Identifier'),
        t('Is Owned By'),
        t('Type'),
        t('Has Contact Point'),
        t('Processing Time'),
        t('Availability'),
        t('Has Cost'),
        t('Has Input'),
        )
      ), 
    t('Cost') => drupal_map_assoc(
      array(
      	t(''),
        t('Identifier'),      
        t('Value'),
        t('Currency'),
        t('Description'),
        t('Is Defined By'),
        )
      ), 
   /* t('Location') => drupal_map_assoc(
      array()
      ), 
    t('Formal Organisation') => drupal_map_assoc(
      array(
        t('Administrative level'),
        t('Alternative name'),
        t('Type'),
        t('Homepage')
        )
      ), 
      t('Legal Entity') => drupal_map_assoc(
      array()
      ), */
    t('Output') => drupal_map_assoc(
      array(
      	t(''),
        t('Identifier'),
        t('Name'),
        t('Description'),
        t('Type'),
        )
      ),
/*   t('Addres') => drupal_map_assoc(
      array(
        t('Full Address'),
        t('Address ID'),
        t('Address Area'),
        t('Admin Unit L1'),
        t('Admin Unit L2'),
        t('Locator Designator'),
        t('Locator Name'),
        t('PO Box'),
        t('PO Code'),
        t('PO Name'),
        t('Thoroughfare'),
        
        )
      ),*/
);
    
  if (isset($options[$key])) {
    return $options[$key];
  }
  else {
    return array();
  }
}

function CPSVAPmapping_getURIclass($class){
	
	$datamodellabelArray = array("Address","AddressAddressArea","AddressAddressID","AddressAdminUnitL1","AddressAdminUnitL2","AddressFullAddress","AddressLocatorDesignator","AddressLocatorName","AddressPOBox","AddressPostCode","AddressPostName","AddressThoroughfare","Agent","AgenthasAddress","AgentIdentifier","AgentName","AgentplaysRole","AgentProvidesRequirementResponse","AgentSatisfiesCriterion","AgentType","Agentuses","BusinessEvent","ChangeEvent","ChangeEventhasFormalFramework","ChangeEventOriginalOrganisation","ChangeEventResultingOrganisation","Channel","Channelavailability","ChannelhasContactPoint","ChannelhasCost","ChannelhasInput","ChannelIdentifier","ChannelisOwnedBy","ChannelprocessingTime","ChannelType","Contact Point","ContactPointhasAddress","ContactPointhasEmail","ContactPointhasTelephone","ContactPointhasURL","ContactPointIdentifier","Cost","Costcurrency","CostDescription","CostIdentifier","Costvalue","Criterion","CriterioncriterionType","CriterionDescription","CriterionfulfilledByRequirementGroup","CriterionfulfilledIndicator","CriterionIdentifier","CriterionisDefinedInFormalFramework","CriterionName","CriterionRequirement","CriterionRequirementapplicableinPeriodOfTime","CriterionRequirementDescription","CriterionRequirementexpectedDataType","CriterionRequirementexpectedValue","CriterionRequirementIdentifier","CriterionRequirementlevelOfCertification","CriterionRequirementmaximumValue","CriterionRequirementmetByEvidence","CriterionRequirementminimumValue","CriterionRequirementName","CriterionRequirementtypeOfCopyQuality","CriterionRequirementtypeOfTranslation","Criterionweight","DocumentReference","DocumentReferenceDescription","DocumentReferenceIdentifier","DocumentReferenceType","DocumentReferenceURL","Event","EventDescription","EventIdentifier","EventName","EventrelatedService","EventType","Evidence","EvidencebelongsToAgent","EvidenceDescription","EvidenceEvidenceType","EvidenceIdentifier","EvidenceissuedByOrganisation","EvidenceisSupportedByDocumentReference","EvidenceLanguage","EvidenceName","FormalFramework","FormalFrameworkDescription","FormalFrameworkIdentifier","FormalFrameworkLanguage","FormalFrameworkName","FormalFrameworkrelated","FormalFrameworkStatus","FormalFrameworksubject","FormalFrameworkterritorialApplication","FormalFrameworkType","FoundationEvent","Geometry","GeometryCoordinates","GeometryCRS","GeometryType","Jurisdiction","JurisdictionIdentifier","JurisdictionName","LegalEntity","LegalEntityAddress","LegalEntityAlternativeName","LegalEntityCompanyActivity","LegalEntityCompanyStatus","LegalEntityCompanyType","LegalEntityIdentifier","LegalEntityLegalIdentifier","LegalEntityLegalName","LegalEntityLocation","LegalEntityRegisteredAddress","LifeEvent","Location","LocationAddress","LocationGeographicIdentifier","LocationGeographicName","LocationGeometry","Output","OutputDescription","OutputIdentifier","OutputisDefinedBy","OutputName","OutputType","Participation","Participationdescription","ParticipationIdentifier","Participationrole","Participationtemporal","PeriodOfTime","PeriodOfTimeendDateime","PeriodOfTimeIdentifier","PeriodOfTimeopeningHours","PeriodOfTimestartDatetime","Person","PersonAddress","PersonAlternativeName","PersonBirthName","PersonCitizenship","PersonCountryOfBirth","PersonCountryOfDeath","PersonDateOfBirth","PersonDateOfDeath","PersonFamilyName","PersonFullName","PersonGender","PersonGivenName","PersonIdentifier","PersonPatronymicName","PersonPlaceOfBirth","PersonPlaceOfDeath","PersonResidency","ProcessingTime","ProcessingTimeIdentifier","ProcessingTimeMeasurementUnit","ProcessingTimeOpeningHours","ProcessingTimeQuantitativeValue","PublicOrganisaitonChangedBy","PublicOrganisationResultedFrom","PublicOrganization","PublicOrganizationAddress","PublicOrganizationAlternativeLabel","PublicOrganizationClassification","PublicOrganizationContactPoint","PublicOrganizationDescription","PublicOrganizationHasMember","PublicOrganizationhasSubOrganisation","PublicOrganizationHasUnit","PublicOrganizationHomepage","PublicOrganizationIdentifier","PublicOrganizationLogo","PublicOrganizationMemberOf","PublicOrganizationNext","PublicOrganizationPreferredLabel","PublicOrganizationPrev","PublicOrganizationPurpose","PublicOrganizationSpatial","PublicOrganizationsubOrganisationOf","PublicOrganizationUnitOf","PublicService","PublicServiceDescription","PublicServiceFollows","PublicServicehasChannel","PublicServicehasCompetentAuthority","PublicServicehasContactPoint","PublicServicehasCost","PublicServicehasCriterion","PublicServicehasFormalFramework","PublicServiceHasInput","PublicServicehasParticipation","PublicServiceHasRole","PublicServiceIdentifier","PublicServiceImplements","PublicServiceisGroupedBy","PublicServiceKeyword","PublicServiceLanguage","PublicServiceName","PublicServicePhysicallyAvailableAt","PublicServiceprocessingTime","PublicServiceProduces","PublicServiceProvides","PublicServiceRelated","PublicServiceRequires","PublicServicesector","PublicServiceserviceProvider","PublicServiceserviceUser","PublicServiceSpatial","PublicServiceStatus","PublicServiceTemporal","PublicServiceType","PublicServiceUses","RequirementGroup","RequirementGroupDescription","RequirementGrouphasCriterionRequirement","RequirementGroupIdentifier","RequirementResponse","RequirementResponseappliesToPeriodOfTime","RequirementResponseDescription","RequirementResponseIdentifier","RequirementResponseName","RequirementResponseprovenByEvidence","RequirementResponsevalidatesCriterionRequirement","RequirementResponsevalue","Rule","RuleDescription","RuleIdentifier","Ruleimplements","RuleLanguage","RuleName");
	$datamodellabelArrayLower = array_map('strtolower',$datamodellabelArray);
	$uriArray =	array("http://www.w3.org/ns/locn#Address","http://www.w3.org/ns/locn#addressArea","http://www.w3.org/ns/locn#addressId","http://www.w3.org/ns/locn#adminUnitL1","http://www.w3.org/ns/locn#adminUnitL2","http://www.w3.org/ns/locn#fullAddress","http://www.w3.org/ns/locn#locatorDesignator","http://www.w3.org/ns/locn#locatorName","http://www.w3.org/ns/locn#poBox","http://www.w3.org/ns/locn#postCode","http://www.w3.org/ns/locn#postName","http://www.w3.org/ns/locn#thoroughfare","http://purl.org/dc/terms/Agent","http://data.europa.eu/m8g/hasAddress","http://purl.org/dc/terms/identifier","http://purl.org/dc/terms/title","http://data.europa.eu/m8g/playsRole","http://data.europa.eu/m8g/Provides Requirement Response","http://data.europa.eu/m8g/Satisfies Criterion","http://purl.org/dc/terms/type","http://data.europa.eu/m8g/uses","http://data.europa.eu/m8g/BusinessEvent","https://www.w3.org/ns/org#ChangeEvent","http://data.europa.eu/m8g/hasFormalFramework","https://www.w3.org/ns/org#originalOrganization","https://www.w3.org/ns/org#resultingOrganization","http://data.europa.eu/m8g/Channel","http://data.europa.eu/m8g/availability","http://data.europa.eu/m8g/hasContactPoint","http://data.europa.eu/m8g/hasCost","http://data.europa.eu/m8g/hasInput","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/isOwnedBy","http://data.europa.eu/m8g/processingTime","http://purl.org/dc/terms/type","http://www.w3.org/2006/vcard/ns#Contact","http://www.w3.org/2006/vcard/ns#hasAddress","http://www.w3.org/2006/vcard/ns#hasEmail","http://www.w3.org/2006/vcard/ns#hasTelephone","http://www.w3.org/2006/vcard/ns#hasURL","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/Cost","http://data.europa.eu/m8g/currency","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/value","http://data.europa.eu/m8g/Criteron","http://data.europa.eu/m8g/criterionType","http://purl.org/dc/terms/description","http://data.europa.eu/m8g/fulfilledByRequirementGroup","http://data.europa.eu/m8g/fulfilledIndicator","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/isDefinedInFormalFramework","http://purl.org/dc/terms/title","http://data.europa.eu/m8g/CriterionRequirement","http://data.europa.eu/m8g/applicableinPeriodOfTime","http://purl.org/dc/terms/description","http://data.europa.eu/m8g/expectedDataType","http://data.europa.eu/m8g/expectedValue","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/levelOfCertification","http://data.europa.eu/m8g/maximumValue","http://data.europa.eu/m8g/metByEvidence","http://data.europa.eu/m8g/minimumValue","http://purl.org/dc/terms/title","http://data.europa.eu/m8g/typeOfCopyQuality","http://data.europa.eu/m8g/typeOfTranslation","http://data.europa.eu/m8g/weight","http://data.europa.eu/m8g/DocumentReference","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://purl.org/dc/terms/type","","http://data.europa.eu/m8g/Event","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://purl.org/dc/terms/title","http://purl.org/dc/terms/relation","http://purl.org/dc/terms/type","http://data.europa.eu/m8g/Evidence","http://data.europa.eu/m8g/belongsToAgent","http://purl.org/dc/terms/description","http://purl.org/dc/terms/type","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/issuedByOrganisation","http://data.europa.eu/m8g/isSupportedByDocumentReference","http://purl.org/dc/terms/language","http://purl.org/dc/terms/title","http://purl.org/vocab/cpsv#FormalFramework","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://data.europa.eu/eli/ontology#language","http://purl.org/dc/terms/title","http://purl.org/dc/terms/relation","http://www.w3.org/ns/adms#status","http://data.europa.eu/m8g/subject","http://data.europa.eu/m8g/territorialApplication","http://purl.org/dc/terms/type","http://data.europa.eu/m8g/FoundationEvent","http://www.w3.org/ns/locn#Geometry","","","","","","","http://www.w3.org/ns/legal#LegalEntity","http://www.w3.org/ns/locn#address","http://purl.org/dc/terms/alternative","http://www.w3.org/ns/legal#companyActivity","http://www.w3.org/ns/legal#companyStatus","http://www.w3.org/ns/legal#companyType","http://purl.org/dc/terms/identifier","http://www.w3.org/ns/legal#legalIdentifier","http://www.w3.org/ns/legal#legalName","http://www.w3.org/ns/locn#location","http://www.w3.org/ns/legal#registeredAddress","http://data.europa.eu/m8g/LifeEvent","http://data.europa.eu/m8g/Location","http://data.europa.eu/m8g/Address","http://data.europa.eu/m8g/Geographic Identifier","http://data.europa.eu/m8g/Geographic Name","http://data.europa.eu/m8g/Geometry","http://data.europa.eu/m8g/Output","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/isDefinedBy","http://purl.org/dc/terms/title","http://purl.org/dc/terms/type","http://data.europa.eu/m8g/Participation","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/role","http://data.europa.eu/m8g/temporal","http://data.europa.eu/m8g/PeriodOfTime","http://data.europa.eu/m8g/endDateTime","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/openingHours","http://data.europa.eu/m8g/startDateTime","http://www.w3.org/ns/person#Person","http://www.w3.org/ns/locn#address","http://purl.org/dc/terms/alternative","http://www.w3.org/ns/person#birthName","http://www.w3.org/ns/person#citizenship","http://www.w3.org/ns/person#countryOfBirth","http://www.w3.org/ns/person#countryOfDeath","http://schema.org/birthDate","http://schema.org/deathDate","http://xmlns.com/foaf/0.1/familyName","","http://schema.org/gender","http://xmlns.com/foaf/0.1/givenName","http://purl.org/dc/terms/identifier","http://www.w3.org/ns/person#patronymicName","http://www.w3.org/ns/person#placeOfBirth","http://www.w3.org/ns/person#placeOfDeath","http://www.w3.org/ns/person#residency","","","","","","https://www.w3.org/ns/org#changedBy","https://www.w3.org/ns/org#resultedFrom","http://data.europa.eu/m8g/PublicOrganization","http://www.w3.org/ns/locn#Address","http://www.w3.org/2004/02/skos/core#altLabel","https://www.w3.org/ns/org#classification","https://schema.org/ContactPoint","http://purl.org/dc/terms/description","https://www.w3.org/ns/org#hasMember","https://www.w3.org/ns/org#hasSubOrganization","https://www.w3.org/ns/org#hasUnit","http://xmlns.com/foaf/spec/#term_homepage","https://www.w3.org/ns/org#identifier","https://schema.org/logo","https://www.w3.org/ns/org#memberOf","https://www.w3.org/1999/xhtml/vocab#next","http://www.w3.org/2004/02/skos/core#prefLabel","https://www.w3.org/1999/xhtml/vocab#prev","https://www.w3.org/ns/org#purpose","http://purl.org/dc/terms/spatial","https://www.w3.org/ns/org#subOrganizationOf","https://www.w3.org/ns/org#unitOf","http://purl.org/vocab/cpsv#PublicService","http://purl.org/dc/terms/description","http://purl.org/vocab/cpsv#follows","http://data.europa.eu/m8g/hasChannel","http://data.europa.eu/m8g/hasCompetentAuthority ","http://data.europa.eu/m8g/hasContactPoint","http://data.europa.eu/m8g/hasCost","http://data.europa.eu/m8g/hasCriterion","http://data.europa.eu/m8g/hasFormalFramework ","http://purl.org/vocab/cpsv#hasInput","http://data.europa.eu/m8g/hasParticipation ","http://purl.org/vocab/cpsv#hasRole","http://purl.org/dc/terms/identifier","http://purl.org/vocab/cpsv#implements","http://data.europa.eu/m8g/isGroupedBy","http://www.w3.org/ns/dcat#keyword","http://purl.org/dc/terms/language","http://purl.org/dc/terms/title","http://purl.org/vocab/cpsv#physicallyAvailableAt","http://data.europa.eu/m8g/processingTime","http://purl.org/vocab/cpsv#produces","http://purl.org/vocab/cpsv#provides","http://purl.org/dc/terms/relation","http://purl.org/dc/terms/requires","http://data.europa.eu/m8g/sector","http://data.europa.eu/m8g/serviceProvider","http://data.europa.eu/m8g/serviceUser","http://purl.org/dc/terms/spatial","http://www.w3.org/ns/adms#status","http://purl.org/dc/terms/temporal","http://purl.org/dc/terms/type","http://purl.org/vocab/cpsv#uses","http://data.europa.eu/m8g/RequirementGroup","http://purl.org/dc/terms/description","http://data.europa.eu/m8g/hasCriterionRequirement","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/RequirementResponse","http://data.europa.eu/m8g/appliesToPeriodOfTime","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://purl.org/dc/terms/title","http://data.europa.eu/m8g/provenByEvidence","http://data.europa.eu/m8g/validatesCriterionRequirement","http://data.europa.eu/m8g/value","http://purl.org/vocab/cpsv#Rule","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://purl.org/vocab/cpsv#implements","http://purl.org/dc/terms/language","http://purl.org/dc/terms/title");
	$uriArrayLower = array_map('strtolower',$uriArray);
	
	$label = preg_replace('/\s+/', '', trim($class));
	$label = strtolower($label);
	if(!array_search($label,$datamodellabelArrayLower))
		$uri = ""; 
	else
		$uri = $uriArrayLower[array_search($label,$datamodellabelArrayLower)];
	
	return $uri;
	
}


function CPSVAPmapping_getURIproperty($class,$property){
	
	$datamodellabelArray = array("Address","AddressAddressArea","AddressAddressID","AddressAdminUnitL1","AddressAdminUnitL2","AddressFullAddress","AddressLocatorDesignator","AddressLocatorName","AddressPOBox","AddressPostCode","AddressPostName","AddressThoroughfare","Agent","AgenthasAddress","AgentIdentifier","AgentName","AgentplaysRole","AgentProvidesRequirementResponse","AgentSatisfiesCriterion","AgentType","Agentuses","BusinessEvent","ChangeEvent","ChangeEventhasFormalFramework","ChangeEventOriginalOrganisation","ChangeEventResultingOrganisation","Channel","Channelavailability","ChannelhasContactPoint","ChannelhasCost","ChannelhasInput","ChannelIdentifier","ChannelisOwnedBy","ChannelprocessingTime","ChannelType","Contact Point","ContactPointhasAddress","ContactPointhasEmail","ContactPointhasTelephone","ContactPointhasURL","ContactPointIdentifier","Cost","Costcurrency","CostDescription","CostIdentifier","Costvalue","Criterion","CriterioncriterionType","CriterionDescription","CriterionfulfilledByRequirementGroup","CriterionfulfilledIndicator","CriterionIdentifier","CriterionisDefinedInFormalFramework","CriterionName","CriterionRequirement","CriterionRequirementapplicableinPeriodOfTime","CriterionRequirementDescription","CriterionRequirementexpectedDataType","CriterionRequirementexpectedValue","CriterionRequirementIdentifier","CriterionRequirementlevelOfCertification","CriterionRequirementmaximumValue","CriterionRequirementmetByEvidence","CriterionRequirementminimumValue","CriterionRequirementName","CriterionRequirementtypeOfCopyQuality","CriterionRequirementtypeOfTranslation","Criterionweight","DocumentReference","DocumentReferenceDescription","DocumentReferenceIdentifier","DocumentReferenceType","DocumentReferenceURL","Event","EventDescription","EventIdentifier","EventName","EventrelatedService","EventType","Evidence","EvidencebelongsToAgent","EvidenceDescription","EvidenceEvidenceType","EvidenceIdentifier","EvidenceissuedByOrganisation","EvidenceisSupportedByDocumentReference","EvidenceLanguage","EvidenceName","FormalFramework","FormalFrameworkDescription","FormalFrameworkIdentifier","FormalFrameworkLanguage","FormalFrameworkName","FormalFrameworkrelated","FormalFrameworkStatus","FormalFrameworksubject","FormalFrameworkterritorialApplication","FormalFrameworkType","FoundationEvent","Geometry","GeometryCoordinates","GeometryCRS","GeometryType","Jurisdiction","JurisdictionIdentifier","JurisdictionName","LegalEntity","LegalEntityAddress","LegalEntityAlternativeName","LegalEntityCompanyActivity","LegalEntityCompanyStatus","LegalEntityCompanyType","LegalEntityIdentifier","LegalEntityLegalIdentifier","LegalEntityLegalName","LegalEntityLocation","LegalEntityRegisteredAddress","LifeEvent","Location","LocationAddress","LocationGeographicIdentifier","LocationGeographicName","LocationGeometry","Output","OutputDescription","OutputIdentifier","OutputisDefinedBy","OutputName","OutputType","Participation","Participationdescription","ParticipationIdentifier","Participationrole","Participationtemporal","PeriodOfTime","PeriodOfTimeendDateTime","PeriodOfTimeIdentifier","PeriodOfTimeopeningHours","PeriodOfTimestartDateTime","Person","PersonAddress","PersonAlternativeName","PersonBirthName","PersonCitizenship","PersonCountryOfBirth","PersonCountryOfDeath","PersonDateOfBirth","PersonDateOfDeath","PersonFamilyName","PersonFullName","PersonGender","PersonGivenName","PersonIdentifier","PersonPatronymicName","PersonPlaceOfBirth","PersonPlaceOfDeath","PersonResidency","ProcessingTime","ProcessingTimeIdentifier","ProcessingTimeMeasurementUnit","ProcessingTimeOpeningHours","ProcessingTimeQuantitativeValue","PublicOrganisaitonChangedBy","PublicOrganisationResultedFrom","PublicOrganization","PublicOrganizationAddress","PublicOrganizationAlternativeLabel","PublicOrganizationClassification","PublicOrganizationContactPoint","PublicOrganizationDescription","PublicOrganizationHasMember","PublicOrganizationhasSubOrganisation","PublicOrganizationHasUnit","PublicOrganizationHomepage","PublicOrganizationIdentifier","PublicOrganizationLogo","PublicOrganizationMemberOf","PublicOrganizationNext","PublicOrganizationPreferredLabel","PublicOrganizationPrev","PublicOrganizationPurpose","PublicOrganizationSpatial","PublicOrganizationsubOrganisationOf","PublicOrganizationUnitOf","PublicService","PublicServiceDescription","PublicServiceFollows","PublicServicehasChannel","PublicServicehasCompetentAuthority","PublicServicehasContactPoint","PublicServicehasCost","PublicServicehasCriterion","PublicServicehasFormalFramework","PublicServiceHasInput","PublicServicehasParticipation","PublicServiceHasRole","PublicServiceIdentifier","PublicServiceImplements","PublicServiceisGroupedBy","PublicServiceKeyword","PublicServiceLanguage","PublicServiceName","PublicServicePhysicallyAvailableAt","PublicServiceprocessingTime","PublicServiceProduces","PublicServiceProvides","PublicServiceRelated","PublicServiceRequires","PublicServicesector","PublicServiceserviceProvider","PublicServiceserviceUser","PublicServiceSpatial","PublicServiceStatus","PublicServiceTemporal","PublicServiceType","PublicServiceUses","RequirementGroup","RequirementGroupDescription","RequirementGrouphasCriterionRequirement","RequirementGroupIdentifier","RequirementResponse","RequirementResponseappliesToPeriodOfTime","RequirementResponseDescription","RequirementResponseIdentifier","RequirementResponseName","RequirementResponseprovenByEvidence","RequirementResponsevalidatesCriterionRequirement","RequirementResponsevalue","Rule","RuleDescription","RuleIdentifier","Ruleimplements","RuleLanguage","RuleName");
	$datamodellabelArrayLower = array_map('strtolower',$datamodellabelArray);
	$uriArray =	array("http://www.w3.org/ns/locn#Address","http://www.w3.org/ns/locn#addressArea","http://www.w3.org/ns/locn#addressId","http://www.w3.org/ns/locn#adminUnitL1","http://www.w3.org/ns/locn#adminUnitL2","http://www.w3.org/ns/locn#fullAddress","http://www.w3.org/ns/locn#locatorDesignator","http://www.w3.org/ns/locn#locatorName","http://www.w3.org/ns/locn#poBox","http://www.w3.org/ns/locn#postCode","http://www.w3.org/ns/locn#postName","http://www.w3.org/ns/locn#thoroughfare","http://purl.org/dc/terms/Agent","http://data.europa.eu/m8g/hasAddress","http://purl.org/dc/terms/identifier","http://purl.org/dc/terms/title","http://data.europa.eu/m8g/playsRole","http://data.europa.eu/m8g/Provides Requirement Response","http://data.europa.eu/m8g/Satisfies Criterion","http://purl.org/dc/terms/type","http://data.europa.eu/m8g/uses","http://data.europa.eu/m8g/BusinessEvent","https://www.w3.org/ns/org#ChangeEvent","http://data.europa.eu/m8g/hasFormalFramework","https://www.w3.org/ns/org#originalOrganization","https://www.w3.org/ns/org#resultingOrganization","http://data.europa.eu/m8g/Channel","http://data.europa.eu/m8g/availability","http://data.europa.eu/m8g/hasContactPoint","http://data.europa.eu/m8g/hasCost","http://data.europa.eu/m8g/hasInput","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/isOwnedBy","http://data.europa.eu/m8g/processingTime","http://purl.org/dc/terms/type","http://www.w3.org/2006/vcard/ns#Contact","http://www.w3.org/2006/vcard/ns#hasAddress","http://www.w3.org/2006/vcard/ns#hasEmail","http://www.w3.org/2006/vcard/ns#hasTelephone","http://www.w3.org/2006/vcard/ns#hasURL","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/Cost","http://data.europa.eu/m8g/currency","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/value","http://data.europa.eu/m8g/Criteron","http://data.europa.eu/m8g/criterionType","http://purl.org/dc/terms/description","http://data.europa.eu/m8g/fulfilledByRequirementGroup","http://data.europa.eu/m8g/fulfilledIndicator","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/isDefinedInFormalFramework","http://purl.org/dc/terms/title","http://data.europa.eu/m8g/CriterionRequirement","http://data.europa.eu/m8g/applicableinPeriodOfTime","http://purl.org/dc/terms/description","http://data.europa.eu/m8g/expectedDataType","http://data.europa.eu/m8g/expectedValue","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/levelOfCertification","http://data.europa.eu/m8g/maximumValue","http://data.europa.eu/m8g/metByEvidence","http://data.europa.eu/m8g/minimumValue","http://purl.org/dc/terms/title","http://data.europa.eu/m8g/typeOfCopyQuality","http://data.europa.eu/m8g/typeOfTranslation","http://data.europa.eu/m8g/weight","http://data.europa.eu/m8g/DocumentReference","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://purl.org/dc/terms/type","","http://data.europa.eu/m8g/Event","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://purl.org/dc/terms/title","http://purl.org/dc/terms/relation","http://purl.org/dc/terms/type","http://data.europa.eu/m8g/Evidence","http://data.europa.eu/m8g/belongsToAgent","http://purl.org/dc/terms/description","http://purl.org/dc/terms/type","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/issuedByOrganisation","http://data.europa.eu/m8g/isSupportedByDocumentReference","http://purl.org/dc/terms/language","http://purl.org/dc/terms/title","http://purl.org/vocab/cpsv#FormalFramework","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://data.europa.eu/eli/ontology#language","http://purl.org/dc/terms/title","http://purl.org/dc/terms/relation","http://www.w3.org/ns/adms#status","http://data.europa.eu/m8g/subject","http://data.europa.eu/m8g/territorialApplication","http://purl.org/dc/terms/type","http://data.europa.eu/m8g/FoundationEvent","http://www.w3.org/ns/locn#Geometry","","","","","","","http://www.w3.org/ns/legal#LegalEntity","http://www.w3.org/ns/locn#address","http://purl.org/dc/terms/alternative","http://www.w3.org/ns/legal#companyActivity","http://www.w3.org/ns/legal#companyStatus","http://www.w3.org/ns/legal#companyType","http://purl.org/dc/terms/identifier","http://www.w3.org/ns/legal#legalIdentifier","http://www.w3.org/ns/legal#legalName","http://www.w3.org/ns/locn#location","http://www.w3.org/ns/legal#registeredAddress","http://data.europa.eu/m8g/LifeEvent","http://data.europa.eu/m8g/Location","http://data.europa.eu/m8g/Address","http://data.europa.eu/m8g/Geographic Identifier","http://data.europa.eu/m8g/Geographic Name","http://data.europa.eu/m8g/Geometry","http://data.europa.eu/m8g/Output","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/isDefinedBy","http://purl.org/dc/terms/title","http://purl.org/dc/terms/type","http://data.europa.eu/m8g/Participation","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/role","http://data.europa.eu/m8g/temporal","http://data.europa.eu/m8g/PeriodOfTime","http://data.europa.eu/m8g/endDateTime","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/openingHours","http://data.europa.eu/m8g/startDateTime","http://www.w3.org/ns/person#Person","http://www.w3.org/ns/locn#address","http://purl.org/dc/terms/alternative","http://www.w3.org/ns/person#birthName","http://www.w3.org/ns/person#citizenship","http://www.w3.org/ns/person#countryOfBirth","http://www.w3.org/ns/person#countryOfDeath","http://schema.org/birthDate","http://schema.org/deathDate","http://xmlns.com/foaf/0.1/familyName","","http://schema.org/gender","http://xmlns.com/foaf/0.1/givenName","http://purl.org/dc/terms/identifier","http://www.w3.org/ns/person#patronymicName","http://www.w3.org/ns/person#placeOfBirth","http://www.w3.org/ns/person#placeOfDeath","http://www.w3.org/ns/person#residency","","","","","","https://www.w3.org/ns/org#changedBy","https://www.w3.org/ns/org#resultedFrom","http://data.europa.eu/m8g/PublicOrganization","http://www.w3.org/ns/locn#Address","http://www.w3.org/2004/02/skos/core#altLabel","https://www.w3.org/ns/org#classification","https://schema.org/ContactPoint","http://purl.org/dc/terms/description","https://www.w3.org/ns/org#hasMember","https://www.w3.org/ns/org#hasSubOrganization","https://www.w3.org/ns/org#hasUnit","http://xmlns.com/foaf/spec/#term_homepage","https://www.w3.org/ns/org#identifier","https://schema.org/logo","https://www.w3.org/ns/org#memberOf","https://www.w3.org/1999/xhtml/vocab#next","http://www.w3.org/2004/02/skos/core#prefLabel","https://www.w3.org/1999/xhtml/vocab#prev","https://www.w3.org/ns/org#purpose","http://purl.org/dc/terms/spatial","https://www.w3.org/ns/org#subOrganizationOf","https://www.w3.org/ns/org#unitOf","http://purl.org/vocab/cpsv#PublicService","http://purl.org/dc/terms/description","http://purl.org/vocab/cpsv#follows","http://data.europa.eu/m8g/hasChannel","http://data.europa.eu/m8g/hasCompetentAuthority ","http://data.europa.eu/m8g/hasContactPoint","http://data.europa.eu/m8g/hasCost","http://data.europa.eu/m8g/hasCriterion","http://data.europa.eu/m8g/hasFormalFramework ","http://purl.org/vocab/cpsv#hasInput","http://data.europa.eu/m8g/hasParticipation ","http://purl.org/vocab/cpsv#hasRole","http://purl.org/dc/terms/identifier","http://purl.org/vocab/cpsv#implements","http://data.europa.eu/m8g/isGroupedBy","http://www.w3.org/ns/dcat#keyword","http://purl.org/dc/terms/language","http://purl.org/dc/terms/title","http://purl.org/vocab/cpsv#physicallyAvailableAt","http://data.europa.eu/m8g/processingTime","http://purl.org/vocab/cpsv#produces","http://purl.org/vocab/cpsv#provides","http://purl.org/dc/terms/relation","http://purl.org/dc/terms/requires","http://data.europa.eu/m8g/sector","http://data.europa.eu/m8g/serviceProvider","http://data.europa.eu/m8g/serviceUser","http://purl.org/dc/terms/spatial","http://www.w3.org/ns/adms#status","http://purl.org/dc/terms/temporal","http://purl.org/dc/terms/type","http://purl.org/vocab/cpsv#uses","http://data.europa.eu/m8g/RequirementGroup","http://purl.org/dc/terms/description","http://data.europa.eu/m8g/hasCriterionRequirement","http://purl.org/dc/terms/identifier","http://data.europa.eu/m8g/RequirementResponse","http://data.europa.eu/m8g/appliesToPeriodOfTime","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://purl.org/dc/terms/title","http://data.europa.eu/m8g/provenByEvidence","http://data.europa.eu/m8g/validatesCriterionRequirement","http://data.europa.eu/m8g/value","http://purl.org/vocab/cpsv#Rule","http://purl.org/dc/terms/description","http://purl.org/dc/terms/identifier","http://purl.org/vocab/cpsv#implements","http://purl.org/dc/terms/language","http://purl.org/dc/terms/title");
	$uriArrayLower = array_map('strtolower',$uriArray);
	
	$label = trim($class).trim($property);
	$label = preg_replace('/\s+/', '',$label);
	$label = strtolower($label);
	
	if(!array_search($label,$datamodellabelArrayLower))
		$uri = ""; 
	else
		$uri = $uriArrayLower[array_search($label,$datamodellabelArrayLower)];
	
	return $uri;
	
}


	