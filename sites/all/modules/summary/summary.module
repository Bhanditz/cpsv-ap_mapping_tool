<?php

function summary_block_info() {
	$blocks['summary'] = array(
		'info' => t('statistics'),
		'cache' => DRUPAL_CACHE_PER_ROLE,
	);

	return $blocks;
}

function summary_contents() {

	/* read filter values */
	$url =  "//{$_SERVER['HTTP_HOST']}{$_SERVER['REQUEST_URI']}";
	$url =  str_replace("cpsv-ap.semic.eu:8890/cpsv-ap_mapping/test?", "", $url);
	parse_str($url, $output);

	$source_datamodel = $output['//did1_selective'];
	$source_class = $output['coreclass_selective'];
	$relation = $output['relation_selective'];
	$target_datamodel = $output['did2_selective'];
	$target_class = $output['mappedclass_selective'];
	$target_property = $output['mappedproperty_selective'];

	/* construct base query */
	$query = db_select('relations', 'r')
			->fields('r');
	if ($source_datamodel != 'All') {
		$query -> condition('r.did1', $source_datamodel, '=');
	}
	if ($source_class != 'All') {
		$query -> condition('r.coreclass', $source_class, '=');
	}
	if ($relation != 'All') {
		$query -> condition('r.relation', $relation, '=');
	}
	if ($target_datamodel != 'All') {
		$query -> condition('r.did2', $target_datamodel, '=');
	}
	if ($target_class != 'All') {
		$query -> condition('r.mappedclass', $target_class, '=');
	}
	if ($target_property != 'All') {
		$query -> condition('r.mappedproperty', $target_property, '=');
	}

	/* construct and execute broad matches query */
	$query_broad_matches = clone($query);
	$count_broad_matches = $query_broad_matches -> condition('r.relation', 'Broad match', '=') -> execute()->rowcount();

	/* construct and execute close matches query */
	$query_close_matches = clone($query);
	$count_close_matches = $query_close_matches -> condition('r.relation', 'Close match', '=') -> execute()->rowcount();

	/* construct and execute exact matches query */
	$query_exact_matches = clone($query);
	$count_exact_matches = $query_exact_matches -> condition('r.relation', 'Exact match', '=') -> execute()->rowcount();

	/* construct and execute narrow matches query */
	$query_narrow_matches = clone($query);
	$count_narrow_matches = $query_narrow_matches -> condition('r.relation', 'Narrow match', '=') -> execute()->rowcount();

	/* construct and execute related matches query */
	$query_related_matches = clone($query);
	$count_related_matches = $query_related_matches -> condition('r.relation', 'Related match', '=') -> execute()->rowcount();

	/* execute base query */
	$count_all = $query->execute()->rowCount();

	/* add statistics to array */
	$options= array('0' => '');
	$options[0] = $count_all;
	$options[1] = round($count_broad_matches/$count_all*100, 2);
	$options[2] = round($count_close_matches/$count_all*100, 2);
	$options[3] = round($count_exact_matches/$count_all*100, 2);
	$options[4] = round($count_narrow_matches/$count_all*100, 2);
	$options[5] = round($count_related_matches/$count_all*100, 2);
		  
    return $options;
}

function summary_block_view($delta= '') {
	switch ($delta) {
		case 'summary':
		$block['subject'] = t('Statistics');
		$result = summary_contents();
		
		// No content in the last week.
        if (empty($result)) {
          $block['content'] = 'Nothing available.';  
        }
        else {

        	 $chart = array(
			    '#type' => 'chart',
			    '#title' => t('Distribution of relations'),
			    '#chart_type' => 'pie',
			    '#chart_library' => 'google', // Allowed values: 'google' or 'highcharts'
			    '#legend_position' => 'right',
			    '#data_labels' => TRUE,
			    '#tooltips' => TRUE,
			    '#legend' => FALSE,
			    '#legend_position' => 'none',
			);
			$chart['pie_data'] = array(
			    '#type' => 'chart_data',
			    '#title' => t('Percentage of relations'),
			    '#labels' => array('Broad match', 'Close match', 'Exact match', 'Narrow match', 'related match'),
			    '#data' => array($result[1], $result[2], $result[3], $result[4], $result[5]),
			);

			$example['chart'] = $chart;


			$block['content'] = 'Number of relations = ' .  $result[0] . "<br/>" 
        						. 'Broad matches = ' .  $result[1] . "%" . "<br/>" 
        						. 'Close matches = ' .  $result[2] . "%" . "<br/>" 
        						. 'Exact matches = ' .  $result[3] . "%" . "<br/>" 
        						. 'Narrow matches = ' .  $result[4] . "%" . "<br/>" 
        						. 'Related matches = ' .  $result[5] . "%" . "<br/>" . drupal_render($example);			
        }

    return $block;
	}
}